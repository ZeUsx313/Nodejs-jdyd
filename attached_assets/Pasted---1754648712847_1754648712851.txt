بالتأكيد. هذا طلب ممتاز. سأقوم بإعداد "برومبت" احترافي وشامل، مصمم خصيصًا ليتم إعطاؤه لمساعد الذكاء الاصطناعي في Replit. هذا البرومبت يحدد بدقة **ما يجب تعديله، وما يجب إضافته، وما يجب عدم المساس به على الإطلاق**.

تفضل، انسخ هذا البرومبت بالكامل وأعطه للمساعد في Replit.

---

### **برومبت شامل لتعديل المشروع وربط الواجهة بالخادم مباشرة**

**المهمة:** بصفتك خبير JavaScript و Node.js، قم بتنفيذ التعديلات التالية بدقة متناهية على ملفات المشروع لربط الواجهة الأمامية (Frontend) بالخادم الخلفي (Backend) بشكل مباشر.

**السياق:** الواجهة الأمامية مستضافة على `https://chatzeus.vercel.app` والخادم الخلفي مستضاف على `https://chatzeus-production.up.railway.app`. سنقوم بتغيير استدعاءات API من مسارات نسبية إلى روابط كاملة مع تفعيل سياسة CORS على الخادم.

---

#### **الخطوة 1: تعديل ملف الواجهة الأمامية (`frontend/script.js`)**

**الهدف:** استبدال جميع استدعاءات API المحلية (النسبية) بروابط الخادم الكاملة.

1.  افتح ملف `frontend/script.js`.
2.  ابحث عن أي سطر كود يقوم باستدعاء `fetch` أو يغير `window.location.href` إلى مسار يبدأ بـ `/api/` أو `/auth/`.
3.  قم بتعديل هذه الأسطر عن طريق إضافة بادئة الخادم `https://chatzeus-production.up.railway.app` إليها.
4.  **تعديل مهم:** عند استدعاء `fetch` لجلب بيانات المستخدم من مسار `/api/user`، يجب **إضافة كائن الإعدادات `{ credentials: 'include' }`** كوسيط ثانٍ للدالة `fetch`. هذا ضروري للسماح للمتصفح بإرسال واستقبال الكوكيز من الخادم.

**مثال للتوضيح (لا تكتب هذا المثال، بل طبّق المبدأ):**

*   **الكود القديم:** `fetch('/api/user')`
*   **الكود الجديد:** `fetch('https://chatzeus-production.up.railway.app/api/user', { credentials: 'include' })`

*   **الكود القديم:** `window.location.href = '/auth/google';`
*   **الكود الجديد:** `window.location.href = 'https://chatzeus-production.up.railway.app/auth/google';`

---

#### **الخطوة 2: تعديل ملف الخادم الخلفي (`backend/index.js`)**

**الهدف:** تثبيت وتفعيل حزمة `cors` للسماح بالطلبات القادمة من نطاق الواجهة الأمامية فقط.

1.  **تثبيت الحزمة:** افتح الطرفية (Shell) وتأكد من أنك داخل مجلد `backend`. نفذ الأمر التالي:
    ```bash
    npm install cors
    ```
    *ملاحظة: إذا لم تتمكن من تنفيذ أوامر الطرفية، أضف `"cors": "^2.8.5"` إلى قسم `dependencies` في ملف `backend/package.json` ثم نفذ `npm install`.*

2.  **تعديل الكود:** افتح ملف `backend/index.js`.
3.  **أولاً، قم باستيراد الحزمة** في أعلى الملف مع باقي الاستيرادات:
    ```javascript
    const cors = require('cors');
    ```
4.  **ثانياً، قم باستخدام الـ Middleware** مباشرة بعد السطر `const app = express();` وقبل تعريف أي مسارات (routes). استخدم الكود التالي بالضبط لضمان الأمان والسماح بتبادل الكوكيز:
    ```javascript
    app.use(cors({
      origin: 'https://chatzeus.vercel.app',
      credentials: true
    }));
    ```

---

**التحقق النهائي:**
بعد تنفيذ هذه التعديلات، تأكد من أنك لم تغير أي وظائف أخرى في الكود. يجب أن تقتصر التغييرات على ما تم تحديده فقط.